AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

######################### Parameters ##########################
Parameters:
  TargetEnvironment:
    Description: Name of your target environment which will be used as a suffix on created resources (dev, UAT, prod, ...)
    Type: String
    Default: prod
  SessionExpiry:
    Type: Number
    Description: The max contact (call) session duration in seconds. Temporary credentials will expire after this time. Max allowed is 3600 (1 hour).
    Default: 3600
    MaxValue: 3600

######################### Metadata ############################
Metadata:
  "AWS::ServerlessRepo::Application":
    Name: Zendesk-Connect-authorization
    Description: Enables the Amazon Connect app for Zendesk to access the Connect API. Required for certain functionality like pause and/ resume call recordings.
    Author: TTEC Digital - AWS Practice
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ["Connect", "Zendesk", "Pause-Resume", "Recording"]
    HomePageUrl: https://github.com/voicefoundry-cloud-public/zendesk-connect-sar-pauseresume
    SemanticVersion: 2.1.1
    SourceCodeUrl: https://github.com/voicefoundry-cloud-public/zendesk-connect-sar-pauseresume

Resources:

  ######################### Permissions and Roles #############
  policyConnectFromZendesk:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub connect-from-zendesk-${TargetEnvironment}
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Action:
            - "connect:UpdateContactAttributes"
            - "connect:ResumeContactRecording"
            - "connect:SuspendContactRecording"
          Resource: !Sub "arn:${AWS::Partition}:connect:${AWS::Region}:${AWS::AccountId}:instance/*"

  roleAccountAssumeConnect:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub account-assume-connect-${TargetEnvironment}  
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root" # change this!!!
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Ref policyConnectFromZendesk
      MaxSessionDuration: 3600

  policyLambdaAssumeRole:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub lambda-assume-role-${TargetEnvironment}
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Resource: !Sub ${roleAccountAssumeConnect.Arn}

  
  ######################### Lambda ############################
  functionContactInit:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "zendeskContactInit-${TargetEnvironment}"
      Description: "Triggered from contact flow, it retrieves temporary credentials for Zendesk to access Connect API"
      Runtime: nodejs22.x
      Handler: index.handler
      CodeUri: contactInit/
      Timeout: 8
      Policies: 
        - AWSLambdaBasicExecutionRole
        - !Ref policyLambdaAssumeRole
      Environment:
        Variables:
          ASSUME_ROLE: !Sub ${roleAccountAssumeConnect.Arn}
          SESSION_EXPIRY: !Ref SessionExpiry
